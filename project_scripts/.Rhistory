}
### type a legend ###
tree_multipanel_typea <- plot_grid(tree_plot_legend_list_typea$kazumbe, empty_plot, tree_plot_legend_list_typea$polyodon,
nrow = 3, rel_heights = c(0.45, 0.05, 0.45))
pos_neg_plus_tree_typea <- plot_grid(plot_grid(empty_plot, pos_neg_legend_vertical, empty_plot,
rel_heights = c(0.2, 0.6, 0.15), ncol = 1),
tree_multipanel_typea, ncol = 2, rel_widths = c(0.32, 0.73))
full_legend_vertical_updated_typea  <- plot_grid(empty_plot,
pos_neg_plus_tree_typea,
plot_grid(empty_plot, z_legend, empty_plot, rel_widths = c(0.25, 0.6, 0.25), ncol = 3),
empty_plot, rel_heights = c(0.05, 0.85, 0.2, 0.05), ncol = 1)
### type b legend ###
tree_multipanel_typeb <- plot_grid(tree_plot_legend_list_typeb$kazumbe, empty_plot, tree_plot_legend_list_typeb$polyodon,
nrow = 3, rel_heights = c(0.45, 0.05, 0.45))
pos_neg_plus_tree_typeb <- plot_grid(plot_grid(empty_plot, pos_neg_legend_vertical, empty_plot,
rel_heights = c(0.2, 0.6, 0.15), ncol = 1),
tree_multipanel_typeb, ncol = 2, rel_widths = c(0.32, 0.73))
full_legend_vertical_updated_typeb  <- plot_grid(empty_plot,
pos_neg_plus_tree_typeb,
plot_grid(empty_plot, z_legend, empty_plot, rel_widths = c(0.25, 0.6, 0.25), ncol = 3),
empty_plot, rel_heights = c(0.05, 0.85, 0.2, 0.05), ncol = 1)
### 3b: CREATE FINAL ADMIXTOOLS MULTIPANEL PLOTS AND EXPORTING FINAL PLOTS ###
#type a with S. diagramma outgroup
plot_grid(plot_grid(full_plot_list$type_a$diagramma$kazumbe,
full_plot_list$type_a$diagramma$polyodon,
nrow = 1, labels = c("(a)", "(b)"), label_size = 26, vjust = 1) +
theme(plot.margin = margin(4, 0, 0, 0)), full_legend_vertical_updated_typeb,
ncol = 2, rel_widths = c(0.76, 0.24))
ggsave2(here('figures', 'dstat_matrix_plot_typea_outgroup_diagramma_9_19_2021.png'),
width = 18*1.1, height = 8*1.1, bg = 'white')
#type a with P. green outgroup
plot_grid(plot_grid(full_plot_list$type_a$green$kazumbe,
full_plot_list$type_a$green$polyodon,
nrow = 1, labels = c("(a)", "(b)"), label_size = 26, vjust = 1) +
theme(plot.margin = margin(4, 0, 0, 0)),
full_legend_vertical_updated_typeb,
ncol = 2, rel_widths = c(0.76, 0.24))
ggsave2(here('figures', 'dstat_matrix_plot_typea_outgroup_green_9_19_2021.png'),
width = 18*1.1, height = 8*1.1, bg = 'white')
#type b with S. diagramma outgroup
plot_grid(plot_grid(full_plot_list$type_b$diagramma$kazumbe,
full_plot_list$type_b$diagramma$polyodon,
nrow = 1, labels = c("(a)", "(b)"), label_size = 26, vjust = 1) +
theme(plot.margin = margin(4, 0, 0, 0)), full_legend_vertical_updated_typea,
ncol = 2, rel_widths = c(0.76, 0.24))
ggsave2(here('figures', 'dstat_matrix_plot_typeb_outgroup_diagramma_9_19_2021.png'),
width = 18*1.1, height = 8*1.1, bg = 'white')
#type a with P. green outgroup
plot_grid(plot_grid(full_plot_list$type_b$green$kazumbe,
full_plot_list$type_b$green$polyodon,
nrow = 1, labels = c("(a)", "(b)"), label_size = 26, vjust = 1) +
theme(plot.margin = margin(4, 0, 0, 0)), full_legend_vertical_updated_typea,
ncol = 2, rel_widths = c(0.76, 0.24))
ggsave2(here('figures', 'dstat_matrix_plot_typeb_outgroup_green_9_19_2021.png'),
width = 18*1.1, height = 8*1.1, bg = 'white')
outgroup_taxa <- c('diagramma', 'green') #the outgroup taxa used in the d-stats
focal_taxa <- c('kazumbe', 'polyodon') #the two species included in the d-stats
dstat_df_list <- list()
for (type in names(full_data_list)) {
outgroup_list <- list()
for (out in outgroup_taxa) {
focal_taxa_list <- list()
for (focal in focal_taxa) {
focal_df <- full_data_list[[type]][[focal]][which(full_data_list[[type]][[focal]]$outgroup == out), c('p2_p3_location_factor_plotting', 'p2_p3_location_factor_letter', 'p1_location_factor_plotting', 'p1_location_factor_letter', 'D', 'z_score')]
focal_df$D_absolute <- abs(focal_df$D)
focal_df$z_score_absolute <- abs(focal_df$z_score)
focal_df$inference[focal_df$z_score < - 3] <- "P2 allele sharing"
focal_df$inference[focal_df$z_score > 3] <- "P1 allele sharing"
focal_df$inference[ (focal_df$z_score <= 3) & (focal_df$z_score >= -3)] <- "no excess allele sharing"
#c2a5cf light red
##a6dba0 light green
focal_df <- focal_df %>%
mutate(color_z = case_when(z_score < -3 ~ "#88469e",
z_score > 3 ~ "#19934b",
z_score >= -3 & z_score < 0 ~ "#c2a5cf",
z_score <= 3 & z_score > 0 ~ "#a6dba0",
z_score == 0 ~ "#a6a6a6") )
focal_taxa_list[[focal]] <- focal_df
}
outgroup_list[[out]] <- focal_taxa_list
}
dstat_df_list[[type]] <- outgroup_list
}
### (ADMIXTOOLS) 2d. create a hierarchical list of matrices of D-stat values and D-stat z-scores (used in Mantel tests) ###
dstat_matrix_list <- list()
for (type in names(dstat_df_list)) {
outgroup_matrix_list <- list()
for (out in names(dstat_df_list[[type]]) ) {
focal_taxa_matrix_list <- list()
for (focal in names(dstat_df_list[[type]][[out]])) {
dstat_mat <- acast(dstat_df_list[[type]][[out]][[focal]], p2_p3_location_factor_plotting~p1_location_factor_plotting, value.var = "D")
dstat_mat[is.na(dstat_mat)] <- 0
zscore <- acast(dstat_df_list[[type]][[out]][[focal]], p2_p3_location_factor_plotting~p1_location_factor_plotting, value.var = "z_score")
zscore[is.na(zscore)] <- 0
focal_taxa_matrix_list[[focal]] <- list(d_stat_val = dstat_mat,
d_stat_zscore = zscore)
}
outgroup_matrix_list[[out]] <- focal_taxa_matrix_list
}
dstat_matrix_list[[type]] <- outgroup_matrix_list
}
significant_dstats <- sapply(setNames(nm = c('kazumbe', 'polyodon')), function(SPECIES, results) {
processed1 <- results[[SPECIES]] %>%
filter(outgroup == 'diagramma') %>%
rowwise() %>%
mutate(id_col = paste(sort(c(P1, P2)), collapse = "_") ) %>%
ungroup() %>%
distinct(id_col, .keep_all = TRUE)
round(
processed1 %>%
filter(abs(z_score) > 3) %>%
nrow()/nrow(processed1),
2
)
}, results = full_data_list$type_b)
############################
### 3. VISUALIZE D-STATS ###
############################
# expression(paste(italic("P"), ". sp. 'kazumbe' (Pk)", sep = ""))
# expression(paste(italic("P"), ". cf. ",  italic("polyodon"), " (Pp)", sep = ""))
#
# expression(paste(italic("Petrochromis"), " sp. 'kazumbe' (Pk)", sep = ""))
# expression(paste(italic("Petrochromis"), " cf. ",  italic("polyodon"), " (Pp)", sep = ""))
### 3a: CREATION OF MATRIX PLOTS FROM ADMIXTOOLS RESULTS ###
#kazumbe_corrplot_title <- expression(paste(italic("P. kazumbe"), " (Pk)"))
#polyodon_corrplot_title <- expression(paste(italic("P. polyodon"), " (Pp)"))
kazumbe_corrplot_title <- expression(paste(italic("Petrochromis"), " sp. 'kazumbe' (Pk)", sep = ""))
polyodon_corrplot_title <- expression(paste(italic("Petrochromis"), " cf. ",  italic("polyodon"), " (Pp)", sep = ""))
scaleFUN <- function(x) sprintf("%.0f", x)
title_list <- list(kazumbe = kazumbe_corrplot_title,
polyodon = polyodon_corrplot_title)
full_plot_list <- list()
for (type in names(dstat_df_list)) {
outgroup_plot_list <- list()
for (out in names(dstat_df_list[[type]])) {
taxa_plot_list <- list()
for (taxa in names(dstat_df_list[[type]][[out]])) {
matrix_plot <- ggplot(data = dstat_df_list[[type]][[out]][[taxa]],
aes(x = p2_p3_location_factor_letter, y = p1_location_factor_letter)) +
geom_raster(fill = 'white') +
#geom_point(aes(size = D_absolute),
geom_point(aes(size = z_score_absolute),
color = dstat_df_list[[type]][[out]][[taxa]]$color_z,
fill = dstat_df_list[[type]][[out]][[taxa]]$color_z) +
scale_size_continuous(range = c(3, 23)) +
theme(plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"),
#panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust = 0.5, size = 19),
axis.text.y = element_text(size = 19),
axis.ticks = element_blank(),
axis.title = element_text(size = 21),
axis.title.y = element_text(margin = margin(t = 0, r = 7, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 7, r = 0, b = 0, l = 0)),
plot.title = element_blank(),
legend.position = "none",
plot.margin = margin(-2, 0, 5.5, 5.5)) +
xlab("P2 population") + ylab("P1 population")
bar_plot <- ggplot(data = dstat_df_list[[type]][[out]][[taxa]] %>%
mutate(bar = 1,
group = factor(case_when(z_score < -3 ~ "group1",
z_score < 0 & z_score >= -3 ~ "group2",
z_score == 0 ~ "group3",
z_score > 0 & z_score <= 3 ~ "group4",
z_score > 3 ~ "group5"), levels = paste0('group', 5:1))),
aes(x = p2_p3_location_factor_letter, y = bar, fill = group) ) +
geom_bar(position="fill", stat="identity", width = 0.9)  +
scale_fill_manual("legend", values = c("group1" = "#88469e",
"group2" =  '#c2a5cf',
"group3" =  "#a6a6a6",
"group4" =  "#a6dba0",
"group5" =  "#19934b")) +
theme(plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
#axis.text.y = element_text(size = 13, color = 'white'),
axis.title.y = element_text(color = 'white'),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title = element_text(size = 21),
plot.title = element_text(size = 24, hjust = 0.5),
legend.position = "none",
plot.margin = margin(5.5, 0, 0, 27)) + #originally right was 5.5
scale_y_continuous(labels = scaleFUN, expand = c(0, 0)) +
ggtitle(title_list[[taxa]])
taxa_plot_list[[taxa]] <- ggarrange(bar_plot,
matrix_plot,
ncol = 1, heights = c(0.4, 1.7))
}
outgroup_plot_list[[out]] <- taxa_plot_list
}
full_plot_list[[type]] <- outgroup_plot_list
}
########################
### CREATING LEGENDS ###
########################
pos_neg_legend_vertical <- ggplot(data = data.frame(x = c(1, 1),
x_end = c(1, 1),
y = c(-0.25, 10.25),
y_end = c(10.25, -0.25)) ) +
geom_segment(aes(x = x, y = y, xend = x_end, yend = y_end),
arrow = arrow(length = unit(0.325, "cm"), type = "closed"), size = 1.75) +
geom_rect(aes(xmin = 0.92, xmax = 1.08, ymin = 4.89, ymax = 5.11), color = "black", fill = "black") +
geom_point(data = data.frame(x = 1.7,
y = c(0, 2.5, 5, 7.5, 10)),
aes(x = x, y = y),
size = c(14, 7, 3.5, 7, 14),
color = c("#88469e", '#c2a5cf', "#a6a6a6", "#a6dba0", "#19934b")) +
geom_text(data = data.frame(x = 0.5,
y = c(0, 2.5, 5, 7.5, 10)),
aes(x = x, y = y),
label = c('-', NA, '0', NA, '+'), size = c(9, 7, 7, 7, 9), hjust = 0.5, vjust = 0.5) +
theme_void() +
theme(plot.margin = margin(5, 0, 5, 3.5)) +
xlim(0.3, 2.1) +
coord_cartesian(clip = 'off')
z_legend <- ggplot(data.frame(x = c(0, 0, 1, 1),
y = c(0, 1, 0, 1))) +
geom_point(aes(x = x, y = y), size = c(7, 14, 7, 14), color = c('#c2a5cf', "#88469e", "#a6dba0", "#19934b")) +
xlim(-0.45, 3.55) + ylim(-0.5, 2) +
geom_text(data = data.frame(x = 2.5, y = c(0, 1)),
aes(x = x, y = y),
label = c('|z| < 3', '|z| > 3'), size = 8, vjust = 0.5, hjust = 0.5) +
theme_void()
empty_plot <- ggplot() + theme_void()
#kazumbe_corrplot_title <- expression(paste(italic("P. kazumbe"), " (Pk)"))
#polyodon_corrplot_title <- expression(paste(italic("P. polyodon"), " (Pp)"))
kazumbe_corrplot_title <- expression(paste(italic("P"), ". sp. 'kazumbe' (Pk)", sep = ""))
polyodon_corrplot_title <- expression(paste(italic("P"), ". cf. ",  italic("polyodon"), " (Pp)", sep = ""))
title_list <- list(kazumbe = kazumbe_corrplot_title,
polyodon = polyodon_corrplot_title)
tip_label_list_typea <- list(kazumbe = c('Pk[pop1]', 'Pk[pop2]', 'Pp[full]', 'O'),
polyodon = c('Pp[pop1]', 'Pp[pop2]', 'Pk[full]', 'O'))
tip_label_list_typeb <- list(kazumbe = c('Pk[pop1]', 'Pk[pop2]', 'Pp[pop2]', 'O'),
polyodon = c('Pp[pop1]', 'Pp[pop2]', 'Pk[pop2]', 'O'))
tree_plot_legend_list_typea <- list()
tree_plot_legend_list_typeb <- list()
for (i in c('polyodon', 'kazumbe')) {
tree_plot_legend_list_typea[[i]] <- ggplot(data.frame(x_start = c(15,   10,  5, 10,  20, 30),
y_start = c(0,   10,  20,  30,   30,  30),
x_end =   c(10, 5, 0,    5, 10, 15),
y_end =   c(10, 20,  30,   20,  10,  0))) +
geom_segment(aes(x = x_start, y = y_start, xend = x_end, yend = y_end), size = 2.5, lineend = 'round') +
geom_text(data = data.frame(x = c(0, 10, 20, 30),
y = 33),
aes(x = x, y = y),
label = tip_label_list_typea[[i]],
size = 5.5, parse = TRUE) +
geom_segment(data = data.frame(x_start = c(25/3, 55/3, 10/3, 50/3),
y_start = c(80/3, 80/3, 70/3, 70/3),
x_end =   c(55/3, 25/3, 50/3, 10/3),
y_end =   c(80/3, 80/3, 70/3, 70/3)),
aes(x = x_start, y = y_start, xend = x_end, yend = y_end),
arrow = arrow(length = unit(0.325, "cm"), type = "closed"),
size = 1.75, color = c("#88469e", "#88469e", "#19934b", "#19934b")) +
xlim(-5, 33) +
theme_void() +
ggtitle(title_list[[i]]) +
theme(plot.title = element_text(size = 22, hjust = 0.5, margin = margin(0, 0, 2, 0))) +
coord_cartesian(clip = 'off')
tree_plot_legend_list_typeb[[i]] <- ggplot(data.frame(x_start = c(15,   10,  5, 10,  20, 30),
y_start = c(0,   10,  20,  30,   30,  30),
x_end =   c(10, 5, 0,    5, 10, 15),
y_end =   c(10, 20,  30,   20,  10,  0))) +
geom_segment(aes(x = x_start, y = y_start, xend = x_end, yend = y_end), size = 2.5, lineend = 'round') +
geom_text(data = data.frame(x = c(0, 10, 20, 30),
y = 33),
aes(x = x, y = y),
label = tip_label_list_typeb[[i]],
size = 5.5, parse = TRUE) +
geom_segment(data = data.frame(x_start = c(25/3, 55/3, 10/3, 50/3),
y_start = c(80/3, 80/3, 70/3, 70/3),
x_end =   c(55/3, 25/3, 50/3, 10/3),
y_end =   c(80/3, 80/3, 70/3, 70/3)),
aes(x = x_start, y = y_start, xend = x_end, yend = y_end),
arrow = arrow(length = unit(0.325, "cm"), type = "closed"),
size = 1.75, color = c("#88469e", "#88469e", "#19934b", "#19934b")) +
xlim(-5, 33) +
theme_void() +
ggtitle(title_list[[i]]) +
theme(plot.title = element_text(size = 21, hjust = 0.5, margin = margin(0, 0, 2, 0))) +
coord_cartesian(clip = 'off')
}
### type a legend ###
tree_multipanel_typea <- plot_grid(tree_plot_legend_list_typea$kazumbe, empty_plot, tree_plot_legend_list_typea$polyodon,
nrow = 3, rel_heights = c(0.45, 0.05, 0.45))
pos_neg_plus_tree_typea <- plot_grid(plot_grid(empty_plot, pos_neg_legend_vertical, empty_plot,
rel_heights = c(0.2, 0.6, 0.15), ncol = 1),
tree_multipanel_typea, ncol = 2, rel_widths = c(0.32, 0.73))
full_legend_vertical_updated_typea  <- plot_grid(empty_plot,
pos_neg_plus_tree_typea,
plot_grid(empty_plot, z_legend, empty_plot, rel_widths = c(0.25, 0.6, 0.25), ncol = 3),
empty_plot, rel_heights = c(0.05, 0.85, 0.2, 0.05), ncol = 1)
### type b legend ###
tree_multipanel_typeb <- plot_grid(tree_plot_legend_list_typeb$kazumbe, empty_plot, tree_plot_legend_list_typeb$polyodon,
nrow = 3, rel_heights = c(0.45, 0.05, 0.45))
pos_neg_plus_tree_typeb <- plot_grid(plot_grid(empty_plot, pos_neg_legend_vertical, empty_plot,
rel_heights = c(0.2, 0.6, 0.15), ncol = 1),
tree_multipanel_typeb, ncol = 2, rel_widths = c(0.32, 0.73))
full_legend_vertical_updated_typeb  <- plot_grid(empty_plot,
pos_neg_plus_tree_typeb,
plot_grid(empty_plot, z_legend, empty_plot, rel_widths = c(0.25, 0.6, 0.25), ncol = 3),
empty_plot, rel_heights = c(0.05, 0.85, 0.2, 0.05), ncol = 1)
### 3b: CREATE FINAL ADMIXTOOLS MULTIPANEL PLOTS AND EXPORTING FINAL PLOTS ###
#type a with S. diagramma outgroup
plot_grid(plot_grid(full_plot_list$type_a$diagramma$kazumbe,
full_plot_list$type_a$diagramma$polyodon,
nrow = 1, labels = c("(a)", "(b)"), label_size = 26, vjust = 1) +
theme(plot.margin = margin(4, 0, 0, 0)), full_legend_vertical_updated_typeb,
ncol = 2, rel_widths = c(0.76, 0.24))
ggsave2(here('figures', 'dstat_matrix_plot_typea_outgroup_diagramma_9_19_2021.png'),
width = 18*1.1, height = 8*1.1, bg = 'white')
#type a with P. green outgroup
plot_grid(plot_grid(full_plot_list$type_a$green$kazumbe,
full_plot_list$type_a$green$polyodon,
nrow = 1, labels = c("(a)", "(b)"), label_size = 26, vjust = 1) +
theme(plot.margin = margin(4, 0, 0, 0)),
full_legend_vertical_updated_typeb,
ncol = 2, rel_widths = c(0.76, 0.24))
ggsave2(here('figures', 'dstat_matrix_plot_typea_outgroup_green_9_19_2021.png'),
width = 18*1.1, height = 8*1.1, bg = 'white')
#type b with S. diagramma outgroup
plot_grid(plot_grid(full_plot_list$type_b$diagramma$kazumbe,
full_plot_list$type_b$diagramma$polyodon,
nrow = 1, labels = c("(a)", "(b)"), label_size = 26, vjust = 1) +
theme(plot.margin = margin(4, 0, 0, 0)), full_legend_vertical_updated_typea,
ncol = 2, rel_widths = c(0.76, 0.24))
ggsave2(here('figures', 'dstat_matrix_plot_typeb_outgroup_diagramma_9_19_2021.png'),
width = 18*1.1, height = 8*1.1, bg = 'white')
#type a with P. green outgroup
plot_grid(plot_grid(full_plot_list$type_b$green$kazumbe,
full_plot_list$type_b$green$polyodon,
nrow = 1, labels = c("(a)", "(b)"), label_size = 26, vjust = 1) +
theme(plot.margin = margin(4, 0, 0, 0)), full_legend_vertical_updated_typea,
ncol = 2, rel_widths = c(0.76, 0.24))
ggsave2(here('figures', 'dstat_matrix_plot_typeb_outgroup_green_9_19_2021.png'),
width = 18*1.1, height = 8*1.1, bg = 'white')
library(tidyverse)
library(kableExtra)
library(abind)
library(rhdf5)
library(here)
dataset_names <- c('focaltaxa_variant_missing70_maf1',
'alltaxa_variant_missing70_maf1',
'focaltaxa_allsites_missing70_maf0',
'mid_focaltaxa_allsites_missing70_maf0',
'north_focaltaxa_allsites_missing70_maf0')
dataset_name_conversion <- data.frame(
new_names = dataset_names,
old_names = c('biallel_polykaz_minq20_maf1_minDP5_maxDP75_miss0.70.recode',
'biallel_polykazoutgroups_minq5_maxDP75_miss0.70.recode',
'allsites_polykaz_minq20_minDP5_maxDP75_miss0.70',
'mid_allsites_polykaz_minq20_minDP5_maxDP75_miss0.70',
'north_allsites_polykaz_minq20_minDP5_maxDP75_miss0.70')
)
vcf_summary[, -1] <- round(vcf_summary[, -1], 2)
dataset_postprocessing_specs <- merge(vcf_summary, dataset_name_conversion, by.x = 'dataset', by.y = 'old_names') %>%
select(!dataset & !mean_indiv_read_depth_sd & !mean_indiv_read_depth_mean) %>%
relocate(new_names, .before = n_sites) %>%
rename(Dataset = new_names,
Sites = n_sites,
`Average mean read depth` = mean_site_read_depth_mean,
`Mean read depth SD` = mean_site_read_depth_sd)
dataset_postprocessing_specs_reorder <- dataset_postprocessing_specs[match(dataset_names, dataset_postprocessing_specs$Dataset),]
rownames(dataset_postprocessing_specs_reorder) <- NULL
dataset_postprocessing_table <- kbl(dataset_postprocessing_specs_reorder, 'latex', booktabs = TRUE, align = "c") %>%
kable_styling(latex_options = c("scale_down", "hold_position") )
cichlid_metadata <- read.csv(here('working_metadata_file', 'monster_23jul20.csv'), stringsAsFactors = FALSE) #metadata
### ENTROPY ###
entropy_samples_order <- read.delim(here('working_metadata_file', 'SAMPLES_biallel_polykaz_minq20_maf1_minDP5_maxDP75_miss0.70.recode.txt'), header = FALSE) #order of samples in entropy results
#load K = 2 results
mod_list <- list()
for (chain in 1:3) {
mod_list[[paste0('chain_', chain)]] <- h5read(here('entropy', 'hdf5_files', paste0('kazumbe_polyodon_qmod_6_18_2021_', 2, 'rep', chain, '.hdf5')), "q")
}
#metadata
all_taxa_samples <- read.delim(here('working_metadata_file', 'SAMPLES_biallel_polykazoutgroups_minq5_maxDP75_miss0.70.recode.txt'), header = FALSE)
#genomic dataset attributes (read information, number of sites, read depth info, etc...)
read_info <- read.table(here('sequencing_summary', 'dataset_summaries_9_20_2021', 'assembled_per_ind.txt'), header = TRUE)
vcf_summary <- read.table(here('sequencing_summary', 'dataset_summaries_9_20_2021', 'vcf_summary_file.txt'), header = TRUE)
dataset_names <- c('focaltaxa_variant_missing70_maf1',
'alltaxa_variant_missing70_maf1',
'focaltaxa_allsites_missing70_maf0',
'mid_focaltaxa_allsites_missing70_maf0',
'north_focaltaxa_allsites_missing70_maf0')
dataset_name_conversion <- data.frame(
new_names = dataset_names,
old_names = c('biallel_polykaz_minq20_maf1_minDP5_maxDP75_miss0.70.recode',
'biallel_polykazoutgroups_minq5_maxDP75_miss0.70.recode',
'allsites_polykaz_minq20_minDP5_maxDP75_miss0.70',
'mid_allsites_polykaz_minq20_minDP5_maxDP75_miss0.70',
'north_allsites_polykaz_minq20_minDP5_maxDP75_miss0.70')
)
vcf_summary[, -1] <- round(vcf_summary[, -1], 2)
dataset_postprocessing_specs <- merge(vcf_summary, dataset_name_conversion, by.x = 'dataset', by.y = 'old_names') %>%
select(!dataset & !mean_indiv_read_depth_sd & !mean_indiv_read_depth_mean) %>%
relocate(new_names, .before = n_sites) %>%
rename(Dataset = new_names,
Sites = n_sites,
`Average mean read depth` = mean_site_read_depth_mean,
`Mean read depth SD` = mean_site_read_depth_sd)
dataset_postprocessing_specs_reorder <- dataset_postprocessing_specs[match(dataset_names, dataset_postprocessing_specs$Dataset),]
rownames(dataset_postprocessing_specs_reorder) <- NULL
dataset_postprocessing_table <- kbl(dataset_postprocessing_specs_reorder, 'latex', booktabs = TRUE, align = "c") %>%
kable_styling(latex_options = c("scale_down", "hold_position") )
dataset_postprocessing_specs_reorder
dataset_postprocessing_specs_reorder <- dataset_postprocessing_specs[match(dataset_names, dataset_postprocessing_specs$Dataset),]
rownames(dataset_postprocessing_specs_reorder) <- NULL
dataset_postprocessing_specs_reorder %>%
mutate(Analyses = case_when(Dataset == 'focaltaxa_variant_missing70_maf1' ~ "Fst, popvae, PCA, entropy",
Dataset == 'alltaxa_variant_missing70_maf1' ~ "D statistics",
Dataset == 'focaltaxa_allsites_missing70_maf0' ~ "nucleotide diversity, dxy",
Dataset == 'mid_focaltaxa_allsites_missing70_maf0' ~ "mid region demographic modeling",
Dataset == 'north_focaltaxa_allsites_missing70_maf0' ~ "north region demographic modeling"))
dataset_postprocessing_table <- kbl(dataset_postprocessing_specs_reorder, 'latex', booktabs = TRUE, align = "c") %>%
kable_styling(latex_options = c("scale_down", "hold_position") )
cat(dataset_postprocessing_table, file = here('tables', 'dataset_postprocessing_table.txt'), append = FALSE)
dataset_postprocessing_specs_reorder <- dataset_postprocessing_specs[match(dataset_names, dataset_postprocessing_specs$Dataset),]
rownames(dataset_postprocessing_specs_reorder) <- NULL
dataset_postprocessing_specs_reorder <- dataset_postprocessing_specs_reorder %>%
mutate(Analyses = case_when(Dataset == 'focaltaxa_variant_missing70_maf1' ~ "Fst, popvae, PCA, entropy",
Dataset == 'alltaxa_variant_missing70_maf1' ~ "D statistics",
Dataset == 'focaltaxa_allsites_missing70_maf0' ~ "nucleotide diversity, dxy",
Dataset == 'mid_focaltaxa_allsites_missing70_maf0' ~ "mid region demographic modeling",
Dataset == 'north_focaltaxa_allsites_missing70_maf0' ~ "north region demographic modeling"))
dataset_postprocessing_table <- kbl(dataset_postprocessing_specs_reorder, 'latex', booktabs = TRUE, align = "c") %>%
kable_styling(latex_options = c("scale_down", "hold_position") )
cat(dataset_postprocessing_table, file = here('tables', 'dataset_postprocessing_table.txt'), append = FALSE)
dataset_postprocessing_specs <- merge(vcf_summary, dataset_name_conversion, by.x = 'dataset', by.y = 'old_names') %>%
select(!dataset & !mean_indiv_read_depth_sd & !mean_indiv_read_depth_mean) %>%
relocate(new_names, .before = n_sites) %>%
rename(Dataset = new_names,
Sites = n_sites,
`Avg. mean RD` = mean_site_read_depth_mean,
`Mean RD SD` = mean_site_read_depth_sd)
dataset_postprocessing_specs_reorder <- dataset_postprocessing_specs[match(dataset_names, dataset_postprocessing_specs$Dataset),]
rownames(dataset_postprocessing_specs_reorder) <- NULL
dataset_postprocessing_specs_reorder <- dataset_postprocessing_specs_reorder %>%
mutate(Analyses = case_when(Dataset == 'focaltaxa_variant_missing70_maf1' ~ "Fst, popvae, PCA, entropy",
Dataset == 'alltaxa_variant_missing70_maf1' ~ "D statistics",
Dataset == 'focaltaxa_allsites_missing70_maf0' ~ "nucleotide diversity, dxy",
Dataset == 'mid_focaltaxa_allsites_missing70_maf0' ~ "mid region demographic modeling",
Dataset == 'north_focaltaxa_allsites_missing70_maf0' ~ "north region demographic modeling"))
dataset_postprocessing_table <- kbl(dataset_postprocessing_specs_reorder, 'latex', booktabs = TRUE, align = "c") %>%
kable_styling(latex_options = c("scale_down", "hold_position") )
cat(dataset_postprocessing_table, file = here('tables', 'dataset_postprocessing_table.txt'), append = FALSE)
dataset_names
dataset_postprocessing_specs <- merge(vcf_summary, dataset_name_conversion, by.x = 'dataset', by.y = 'old_names') %>%
select(!dataset & !mean_indiv_read_depth_sd & !mean_indiv_read_depth_mean) %>%
relocate(new_names, .before = n_sites) %>%
rename(Dataset = new_names,
Sites = n_sites,
`Avg. mean RD` = mean_site_read_depth_mean,
`Mean RD SD` = mean_site_read_depth_sd)
dataset_postprocessing_specs_reorder <- dataset_postprocessing_specs[match(dataset_names, dataset_postprocessing_specs$Dataset),]
rownames(dataset_postprocessing_specs_reorder) <- NULL
dataset_postprocessing_table <- kbl(dataset_postprocessing_specs_reorder, 'latex', booktabs = TRUE, align = "c") %>%
kable_styling(latex_options = c("scale_down", "hold_position") )
cat(dataset_postprocessing_table, file = here('tables', 'dataset_postprocessing_table.txt'), append = FALSE)
variant_only <- c('true', 'true', 'false', 'false', 'false')
min_quality <- rep(20, 5)
maf <- c(0.01, 0.01, 0, 0, 0)
min_dp <- rep(20, 5)
max_dp <- rep(75, 5)
dataset_specs <- data.frame("Dataset" = dataset_names,
"Variant-only" = variant_only,
"Min quality" = min_quality,
"MAF" = maf,
"Min mean DP" = min_dp,
"Max mean DP" = max_dp,
check.names = FALSE)
dataset_specs <- dataset_specs %>%
mutate(Analyses = case_when(Dataset == 'focaltaxa_variant_missing70_maf1' ~ "Fst, popvae, PCA, entropy",
Dataset == 'alltaxa_variant_missing70_maf1' ~ "D statistics",
Dataset == 'focaltaxa_allsites_missing70_maf0' ~ "nucleotide diversity, dxy",
Dataset == 'mid_focaltaxa_allsites_missing70_maf0' ~ "mid region demographic modeling",
Dataset == 'north_focaltaxa_allsites_missing70_maf0' ~ "north region demographic modeling"))
dataset_specs
dataset_postprocessing_specs <- merge(vcf_summary, dataset_name_conversion, by.x = 'dataset', by.y = 'old_names') %>%
select(!dataset & !mean_indiv_read_depth_sd & !mean_indiv_read_depth_mean) %>%
relocate(new_names, .before = n_sites) %>%
rename(Dataset = new_names,
Sites = n_sites,
`Average mean read depth` = mean_site_read_depth_mean,
`Mean read depth SD` = mean_site_read_depth_sd)
dataset_postprocessing_specs_reorder <- dataset_postprocessing_specs[match(dataset_names, dataset_postprocessing_specs$Dataset),]
rownames(dataset_postprocessing_specs_reorder) <- NULL
dataset_postprocessing_table <- kbl(dataset_postprocessing_specs_reorder, 'latex', booktabs = TRUE, align = "c") %>%
kable_styling(latex_options = c("scale_down", "hold_position") )
cat(dataset_postprocessing_table, file = here('tables', 'dataset_postprocessing_table.txt'), append = FALSE)
variant_only <- c('true', 'true', 'false', 'false', 'false')
min_quality <- rep(20, 5)
maf <- c(0.01, 0.01, 0, 0, 0)
min_dp <- rep(20, 5)
max_dp <- rep(75, 5)
dataset_specs <- data.frame("Dataset" = dataset_names,
"Variant-only" = variant_only,
"Min quality" = min_quality,
"MAF" = maf,
"Min mean DP" = min_dp,
"Max mean DP" = max_dp,
check.names = FALSE)
dataset_specs <- dataset_specs %>%
mutate(Analyses = case_when(Dataset == 'focaltaxa_variant_missing70_maf1' ~ "Fst, popvae, PCA, entropy",
Dataset == 'alltaxa_variant_missing70_maf1' ~ "D statistics",
Dataset == 'focaltaxa_allsites_missing70_maf0' ~ "nucleotide diversity, dxy",
Dataset == 'mid_focaltaxa_allsites_missing70_maf0' ~ "mid region demographic modeling",
Dataset == 'north_focaltaxa_allsites_missing70_maf0' ~ "north region demographic modeling"))
dataset_specs_table <- kbl(dataset_specs, 'latex', booktabs = TRUE, align = "c") %>%
kable_styling(latex_options = c("scale_down", "hold_position") )
cat(dataset_specs_table, file = here('tables', 'dataset_specs_table.txt'), append = FALSE)
